#BlueJ class context
comment0.target=AuthorTree
comment1.params=
comment1.target=AuthorTree()
comment10.params=name\ s
comment10.target=void\ addToWorks(java.lang.String,\ java.lang.String)
comment11.params=current\ name
comment11.target=AuthorNode\ insert(AuthorNode,\ java.lang.String)
comment12.params=name
comment12.target=void\ add(java.lang.String)
comment13.params=current\ name
comment13.target=AuthorNode\ removeRecursive(AuthorNode,\ java.lang.String)
comment14.params=r
comment14.target=java.lang.String\ findSmallestValue(AuthorNode)
comment15.params=name
comment15.target=void\ remove(java.lang.String)
comment16.params=node
comment16.target=void\ traverseInOrder(AuthorNode)
comment17.params=
comment17.target=void\ printInOrder()
comment18.params=
comment18.target=AuthorTree\ createBinaryTree()
comment19.params=
comment19.target=void\ givenABinaryTree_WhenAddingElements_ThenTreeContainsThoseElements()
comment2.params=t
comment2.target=AuthorTree(AuthorTree)
comment20.params=
comment20.target=void\ givenABinaryTree_WhenDeletingElements_ThenTreeDoesNotContainThoseElements()
comment3.params=
comment3.target=AuthorNode\ getRoot()
comment4.params=
comment4.target=int\ getNum_items()
comment5.params=current\ name
comment5.target=boolean\ containsNodeRecursive(AuthorNode,\ java.lang.String)
comment6.params=name
comment6.target=boolean\ containsNode(java.lang.String)
comment7.params=current\ name
comment7.target=AuthorNode\ findAuthorHelper(AuthorNode,\ java.lang.String)
comment8.params=name
comment8.target=AuthorNode\ findAuthor(java.lang.String)
comment9.params=current\ name\ s
comment9.target=void\ addToWorksHelper(AuthorNode,\ java.lang.String,\ java.lang.String)
numComments=21
